<project name="DOST" default="init" basedir=".">
  <import file="build_init.xml"></import>  
  <import file="build_preprocess.xml"></import>
  <import file="build_general.xml"></import>    
  <import file="build_dita2xhtml.xml"></import>
  <import file="build_dita2htmlhelp.xml"></import>
  <import file="build_dita2javahelp.xml"></import>
  <import file="build_dita2eclipsehelp.xml"></import>
  <import file="build_dita2eclipsecontent.xml"></import>
  <import file="build_dita2pdf.xml"></import>
  <import file="build_dita2wordrtf.xml"></import>
  <import file="build_dita2odt.xml"></import>
  <import file="build_dita2docbook.xml"></import>
  <import file="build_dita2troff.xml"></import>
        
  <path id="dost.class.path">
    
<pathelement location="${dita.dir}${file.separator}demo/fo/fo.jar"/>
    <pathelement location="${dita.dir}${file.separator}lib${file.separator}dost.jar"></pathelement>
  </path>
  
  <target name="init">
    <dita-ot-fail id="DOTA001F">
      <condition>
        <and>
          <not>
            <equals arg1="${transtype}" arg2="xhtml" casesensitive="false"></equals>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="eclipsehelp" casesensitive="false"></equals>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="javahelp" casesensitive="false"></equals>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="htmlhelp" casesensitive="false"></equals>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="pdf" casesensitive="false"></equals>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="docbook" casesensitive="false"></equals>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="eclipsecontent" casesensitive="false"></equals>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="troff" casesensitive="false"></equals>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="wordrtf" casesensitive="false"></equals>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="odt" casesensitive="false"></equals>
          </not>
          <not><equals arg1="${transtype}" arg2="tocjs" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="pdf2" casesensitive="false"/></not>
        </and>
      </condition>
    </dita-ot-fail>
    <condition property="transtarget" value="pdf2" else="${transtype}">
      <equals arg1="${transtype}" arg2="pdf" casesensitive="false"></equals>
    </condition>
    <antcall target="dita2${transtarget}"></antcall>
  	<condition property="clean_temp">
  	  <and>
  	    <isset property="clean.temp"></isset>
  	    <equals arg1="${clean.temp}" arg2="no" casesensitive="false"></equals>
  	  </and>
  	</condition>
  	<antcall target="clean-temp">
  	</antcall>
  </target>
  
  <target name="all">
    <echo>The &quot;ant all&quot; demonstration build has moved.
      Please try the following command instead:
      ant all -f build_demo.xml</echo>
  </target>
  
  <target name="dita-preprocess" depends="start-process, init-logger, init-URIResolver, check-arg, output-deprecated-msg, output-css-warn-message, preprocess"></target>

  

  
<target name="dita2tocjs" depends="dita-preprocess, map2tocjs, topic2tocjs">
</target>

  
<target name="topic2tocjs" if="noMap" depends="dita-preprocess">
    
<antcall target="dita.map.tocjs">
      
    
</antcall>
  
</target>

  
<target name="map2tocjs" unless="noMap" depends="dita-preprocess">
    
<antcall target="dita.map.tocjs">
      
<param name="input" value="${dita.temp.dir}${file.separator}${user.input.file}">
</param>
    
</antcall>
  
</target>


  
<target name="dita.map.tocjs" description="generate merged for tocjs">
    
<xslt processor="trax" in="${input}" out="${output.file}" style="${dita.dir}/demo/tocjs/xsl/tocjs.xsl">
      
<param name="contentwin" expression="${content.frame}" if="content.frame">
</param>
      
<param name="ditaext" expression="${dita.extname}">
</param>
      
<param name="htmlext" expression="${out.ext}">
</param>
      
    
</xslt>
  
</target>


  
  
  
<available file="${dita.dir}/plugins/fo/build.xml" property="pdf2.dir" value="plugins">
</available>
  
<condition property="pdf2.dir" value="demo">
    
<not>
      
<isset property="pdf2.dir">
</isset>
    
</not>
  
</condition>
  
  
<target name="dita2pdf2" depends="pdfswitch-warning, dita-preprocess, map2pdf2, topic2pdf2">
</target> 
  
  
<condition property="pdftranstype">
    
<equals arg1="${transtype}" arg2="pdf" casesensitive="false">
</equals>
  
</condition>
    
  
<target name="pdfswitch-warning" if="pdftranstype">
    
<echo>/------------------------------------------\
</echo>
    
<echo>| PLEASE NOTE: YOU ARE USING THE FO PLUGIN |
</echo>
    
<echo>| If you want the old pdf transtype, use   |
</echo>
    
<echo>| the "legacypdf" transtype instead.       |
</echo>
    
<echo>\------------------------------------------/
</echo>
  
</target>
  
  
<target name="topic2pdf2" if="noMap" depends="dita-preprocess">
	
<ant dir="${dita.dir}/${pdf2.dir}/fo" target="preview.topic.pdf">
		
<property name="caller.dir" value="${basedir}">
</property>
	
</ant>
  
</target>

  
<target name="map2pdf2" unless="noMap" depends="dita-preprocess">
  	
<dirname property="dita.temp.dir.fullpath" file="${dita.temp.dir}${file.separator}dummy.file">
</dirname>
    
<pipeline message="topicmerge" module="TopicMerge" inputmap="${dita.temp.dir.fullpath}${file.separator}${user.input.file}" tempdir="${dita.temp.dir.fullpath}" extparam="output=${dita.temp.dir.fullpath}${file.separator}${dita.map.filename.root}_MERGED.xml;style=${dita.dir}/${pdf2.dir}/fo/xsl/common/topicmerge.xsl">
    
</pipeline>

    
<ant dir="${dita.dir}/${pdf2.dir}/fo" target="publish.map.pdf">
        
<property name="caller.dir" value="${basedir}">
</property>
    
</ant>
  
</target>

  
</project>